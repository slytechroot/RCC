10.5 Command Pipelines

Command pipelines are often used to make effective use of filter commands. In a command pipeline, the output of one command is sent to another command as input. In Linux and most operating systems, the vertical bar or pipe | character is used between two commands to represent a command pipeline.

For example, imagine that the output of the history command is very large. To send this output to the less command, which displays one "page" of data at a time, the following command pipeline can be used:

sysadmin@localhost:~$ history | less

Note

To exit the less pager command, press the Q key.

Even better, take the output of the history command and filter the output by using the grep command. In the following example, the text output by the history command is redirected to the grep command as input. The grep command matches the ls strings and sends its output to standard out:

sysadmin@localhost:~$ history | grep "ls"
   1  ls ~ > /tmp/home.txt
    5  ls l> /tmp/ls.txt
    6  ls 1> /tmp/ls.txt
    7  date 1>> /tmp/ls.txt
    8  ls /junk
    9  ls /junk > output
   10  ls /junk 2> /tmp/ls.err
   11  ls /junk 2>> /tmp/ls.err
   14  ls > /tmp/ls.all 2>&1
   15  ls &> /tmp/ls.all
   16  ls /etc/au* >> /tmp/ls.all 2>&1
   17  ls /etc/au* &>> /tmp.ls.all
   20  history | grep "ls"

Command pipelines become really powerful when three or more commands are combined. For example, view the contents of the os.csv file in the Documents directory:

sysadmin@localhost:~$ cat Documents/os.csv
1970,Unix,Richie
1987,Minix,Tanenbaum
1970,Unix,Thompson
1991,Linux,Torvalds

The following command line will extract some fields from the os.csv file with the cut command, then sort these lines with the sort command, and finally eliminate duplicate lines with the uniq command:

sysadmin@localhost:~$ cut -f1 -d',' Documents/os.csv | sort -n | uniq
1970
1987
1991

