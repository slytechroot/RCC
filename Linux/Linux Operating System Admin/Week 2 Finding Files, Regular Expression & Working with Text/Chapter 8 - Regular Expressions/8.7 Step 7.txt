8.7 Step 7

The asterisk operator * is used to match zero or more instances of the previous value. Execute the following command to match a colon : character, followed by zero or more numbers, followed by a colon:

tail /etc/passwd | grep ':[0-9]*:' 

sysadmin@localhost:~$ tail /etc/passwd | grep ':[0-9]*:'
uuidd:x:103:105::/run/uuidd:/usr/sbin/nologin
syslog:x:104:108::/home/syslog:/usr/sbin/nologin
messagebus:x:105:109::/nonexistent:/usr/sbin/nologin
bind:x:106:111::/var/cache/bind:/usr/sbin/nologin
sshd:x:107:65534::/run/sshd:/usr/sbin/nologin
operator:x:1000:37::/root:/bin/bash
sysadmin:x:1001:1001:System Administrator,,,,:/home/sysadmin:/bin/bash
alice:x:1002:1005:Alice White:/home/alice:/bin/bash
maya:x:1003:1006:Maya Brown:/home/maya:/bin/bash
joe:x:1004:1007:Joe Green:/home/joe:/bin/bash

The output in the example above shows how, sometimes, using the asterisk * operator results in bad matches. For example, in the last six lines of the output, there are five lines that match two colon :: characters only. In most cases, it may be more useful to match one or more characters rather than zero or more. However, this will require the use of an extended regular expression (the plus + operator) which will be demonstrated later in the lab.

In this example, the pipe | character is used to send the output of one command to another. Some of the following examples use the cat command to send the contents of a file to the grep command. Pipes will be covered in greater detail later in the course.

The pipe | character can also be used as an alternation operator within an extended regular expression. This should not be confused with the output chaining use of pipe in the cat | grep examples.
